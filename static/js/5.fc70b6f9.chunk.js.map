{"version":3,"sources":["components/common/FormControls/FormControls.module.css","utils/validators/index.js","components/common/FormControls/FormControls.jsx","components/Dialog/Dialog.module.css","components/Dialog/DialogsItem/DialogsItem.module.css","components/Dialog/Massege/Message.module.css","components/Dialog/DialogsItem/DialogsItem.jsx","components/Dialog/Massege/Message.jsx","components/Dialog/Dialog.jsx","components/Dialog/DialogContainer.jsx","hoc/withAuthRedirect.jsx"],"names":["module","exports","required","value","maxLength","maxL","length","Element","input","meta","touched","error","props","hasError","className","style","formControl","Textarea","Input","CreateField","type","name","placeholder","validators","component","text","validate","DialogsItem","path","id","s","dialog","activeClassName","active","to","Message","message","maxLength15","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","Dialog","dialogsItemsArr","state","dialogs","map","obj","messagesArr","messages","dialogsItems","data","addMessage","newMessageText","compose","connect","DialogsPage","dispatch","addMessageActionCreator","Component","RedirectComponet","this","isAuth","React","Auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,iCCDzH,oEAAO,IAAMC,EAAW,SAACC,GACvB,IAAIA,EACJ,MAAO,qBAGIC,EAAY,SAACC,GAAD,OAAU,SAACF,GAClC,GAAIA,EAAMG,OAASD,EAAM,MAAM,iBAAN,OAAwBA,EAAxB,e,oMCFrBE,EACJ,SAACA,GAAD,OACA,YAAoD,IAAjDC,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,EAAY,gCAC3CC,EAAWH,GAAWC,EAC5B,OACE,sBAAKG,UAAWC,IAAMC,YAAc,KAAOH,EAAWE,IAAMJ,MAAQ,IAApE,UACE,8BACE,cAAC,EAAD,2BAAaH,GAAWI,MAEzBC,GAAY,+BAAOF,SAKfM,EAAWV,EAAQ,YAEnBW,EAAQX,EAAQ,SAEhBY,EAAc,SACzBC,EACAC,EACAC,EACAC,EACAC,GAGI,IAFJZ,EAEG,uDAFK,GACRa,EACG,uDADI,GAEP,OACE,gCACE,cAAC,IAAD,aACEL,KAAMA,EACNC,KAAMA,EACNC,YAAaA,EACbE,UAAWA,EACXE,SAAUH,GACNX,IAELa,O,oBCxCPzB,EAAOC,QAAU,CAAC,QAAU,wBAAwB,aAAe,6BAA6B,SAAW,2B,oBCA3GD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,8B,oBCAhED,EAAOC,QAAU,CAAC,QAAU,2B,yNCcb0B,EAXK,SAACf,GACnB,IAAMgB,EAAO,YAAchB,EAAMiB,GACjC,OACE,qBAAKf,UAAWgB,IAAEC,OAAlB,SACE,cAAC,IAAD,CAASC,gBAAiBF,IAAEG,OAAQC,GAAIN,EAAxC,SACGhB,EAAMS,U,kBCFAc,EAJC,SAACvB,GACf,OAAO,qBAAKE,UAAWgB,IAAEM,QAAlB,SAA4BxB,EAAMwB,WC2BrCC,EAAcjC,YAAU,IAmBxBkC,EAAmBC,YAAU,CAAEC,KAAM,eAAlBD,EAlBL,SAAC3B,GACnB,OACE,uBAAM6B,SAAU7B,EAAM8B,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEnB,UAAWP,IACXK,YAAY,qBACZD,KAAK,iBACLK,SAAU,CAACxB,IAAUmC,OAGzB,8BACE,kDAQOO,EA5CA,SAAChC,GACd,IAAMiC,EAAkBjC,EAAMkC,MAAMC,QAAQC,KAAI,SAACC,GAAD,OAC9C,cAAC,EAAD,CAAa5B,KAAM4B,EAAI5B,KAAMQ,GAAIoB,EAAIpB,QAEjCqB,EAActC,EAAMkC,MAAMK,SAASH,KAAI,SAACC,GAAD,OAC3C,cAAC,EAAD,CAASb,QAASa,EAAIb,aAOxB,OACE,sBAAKtB,UAAWgB,IAAEiB,QAAlB,UACE,qBAAKjC,UAAWgB,IAAEsB,aAAlB,SAAiCP,IACjC,sBAAK/B,UAAWgB,IAAEqB,SAAlB,UACGD,EACD,cAACZ,EAAD,CAAkBG,SATL,SAACY,GAClBzC,EAAM0C,WAAWD,EAAKE,0BCGXC,sBACbC,aAdsB,SAACX,GACvB,MAAO,CACLA,MAAOA,EAAMY,gBAGU,SAACC,GAC1B,MAAO,CACLL,WAAY,SAACC,GACXI,EAASC,YAAwBL,UCVP,SAACM,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKnD,MAAMoD,OACT,cAACH,EAAD,eAAeE,KAAKnD,QADI,cAAC,IAAD,CAAUsB,GAAI,eAHJ,GACd+B,IAAMJ,WAOrC,OAAOJ,aAAQ,SAACX,GAAD,MAAY,CAAEkB,OAAQlB,EAAMoB,KAAKF,UAAzCP,CAAoDK,KDO9CN,CAGbZ","file":"static/js/5.fc70b6f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2axsW\",\"error\":\"FormControls_error__24y5C\",\"formSummaryError\":\"FormControls_formSummaryError__kXbFS\"};","export const required = (value) => {\n  if (value) return undefined;\n  return \"Field is required\";\n};\n\nexport const maxLength = (maxL) => (value) => {\n  if (value.length > maxL) return `Max length is ${maxL} simbols`;\n  return undefined;\n};\n","import React from \"react\";\nimport style from \"./FormControls.module.css\";\nimport { Field } from \"redux-form\";\n\nconst Element =\n  (Element) =>\n  ({ input, meta: { touched, error }, ...props }) => {\n    const hasError = touched && error;\n    return (\n      <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\n        <div>\n          <Element {...input} {...props} />\n        </div>\n        {hasError && <span>{error}</span>}\n      </div>\n    );\n  };\n\nexport const Textarea = Element(\"textarea\");\n\nexport const Input = Element(\"input\");\n\nexport const CreateField = (\n  type,\n  name,\n  placeholder,\n  validators,\n  component,\n  props = {},\n  text = \"\"\n) => {\n  return (\n    <div>\n      <Field\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        component={component}\n        validate={validators}\n        {...props}\n      />\n      {text}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__2wpON\",\"dialogsItems\":\"Dialog_dialogsItems__2OEME\",\"messages\":\"Dialog_messages__3yPia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__5Go6-\",\"active\":\"DialogsItem_active__3p-Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1_UcB\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./DialogsItem.module.css\";\n\nconst DialogsItem = (props) => {\n  const path = \"/dialogs/\" + props.id;\n  return (\n    <div className={s.dialog}>\n      <NavLink activeClassName={s.active} to={path}>\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogsItem;\n","import React from \"react\";\nimport s from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return <div className={s.message}>{props.message}</div>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLength, required } from \"../../utils/validators\";\nimport { Textarea } from \"../common/FormControls/FormControls\";\nimport s from \"./Dialog.module.css\";\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\nimport Message from \"./Massege/Message\";\n\nconst Dialog = (props) => {\n  const dialogsItemsArr = props.state.dialogs.map((obj) => (\n    <DialogsItem name={obj.name} id={obj.id} />\n  ));\n  const messagesArr = props.state.messages.map((obj) => (\n    <Message message={obj.message} />\n  ));\n\n  const addMessage = (data) => {\n    props.addMessage(data.newMessageText);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsItemsArr}</div>\n      <div className={s.messages}>\n        {messagesArr}\n        <MessageReduxForm onSubmit={addMessage} />\n      </div>\n    </div>\n  );\n};\n\nconst maxLength15 = maxLength(15);\nconst MessegeForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          placeholder=\"Enter your message\"\n          name=\"newMessageText\"\n          validate={[required, maxLength15]}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst MessageReduxForm = reduxForm({ form: \"MessageForm\" })(MessegeForm);\n\nexport default Dialog;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialog from \"./Dialog\";\n\nconst mapStateToProps = (state) => {\n  return {\n    state: state.DialogsPage,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (newMessageText) => {\n      dispatch(addMessageActionCreator(newMessageText));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialog);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nconst mapStateToProps = {};\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponet extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />;\n    }\n  }\n\n  return connect((state) => ({ isAuth: state.Auth.isAuth }))(RedirectComponet);\n};\n"],"sourceRoot":""}